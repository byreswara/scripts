parameters:
- name: service_connection
  type: string
- name: manifests_directory
  type: string
- name: aks_resource_group
  type: string
  default: $(aks_resource_group)
- name: aks_cluster_name
  type: string
  default: $(aks_cluster_name)
- name: namespace
  type: string
  default: $(namespace)
- name: helm_release
  type: string
  default: $(namespace)
- name: nginx_ingress_preflight_script_path
  type: string
  default: $(nginx_ingress_preflight_script_path)
- name: nginx_ingress_preflight_script_arguments
  type: string
  default: $(nginx_ingress_preflight_script_arguments)

steps:
- pwsh: |
    write-host "List all files in pipelinekit"
    get-childitem "$(Build.SourcesDirectory)" -Recurse
  displayName: 'List all files in sources'

# - bash: |
#     # This script installs kubelogin on the ADO agent, then converts the kube.config to azurecli token for authentication
#     wget https://github.com/Azure/kubelogin/releases/download/v0.0.24/kubelogin-linux-amd64.zip
#     unzip kubelogin-linux-amd64.zip
#     sudo mv bin/linux_amd64/kubelogin /usr/bin
#   displayName: 'Install kubelogin'

- bash: |
    helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    helm repo update
  displayName: 'Download Nginx Helm Repo'

- task: AzureCLI@2
  displayName: "Nginx Ingress Controller Preflight"
  inputs:
    azureSubscription: ${{ parameters.service_connection }}
    scriptType: pscore
    scriptPath: ${{ parameters.nginx_ingress_preflight_script_path }}
    arguments: ${{ parameters.nginx_ingress_preflight_script_arguments }}

- task: qetza.replacetokens.replacetokens-task.replacetokens@5
  displayName: 'Replace tokens in **/secretproviderclass.yml **/values.yml'
  inputs:
    rootDirectory: ${{ parameters.manifests_directory }}
    targetFiles: |
      **/secretproviderclass.yml
      **/values.yml
    tokenPattern: custom
    tokenPrefix: '<<'
    tokenSuffix: '>>'

- pwsh: |
    $manifests = Get-ChildItem -Path ${{ parameters.manifests_directory }} -Recurse -Include *.yml,*.yaml
    $manifests | ForEach-Object {
      Write-Host "Manifest: $($_.FullName)"
      Get-Content $_.FullName
    }
  displayName: 'Output Manifest Files'

- task: Kubernetes@1
  displayName: 'Add Secret Provider Class'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.service_connection }}
    azureResourceGroup: ${{ parameters.aks_resource_group }}
    kubernetesCluster: ${{ parameters.aks_cluster_name }}
    useClusterAdmin: true
    namespace: ${{ parameters.namespace }}
    command: apply
    useConfigurationFile: true
    configuration: '${{parameters.manifests_directory }}/secretproviderclass.yml'

- task: HelmDeploy@0
  displayName: 'Nginx helm chart install'
  inputs:
    azureSubscription: ${{ parameters.service_connection }}
    azureResourceGroup: ${{ parameters.aks_resource_group }}
    kubernetesCluster: ${{ parameters.aks_cluster_name }}
    useClusterAdmin: true
    namespace: ${{ parameters.namespace }}
    command: upgrade
    chartName: 'ingress-nginx/ingress-nginx'
    releaseName: ${{ parameters.helm_release }}
    valueFile: '${{ parameters.manifests_directory }}/values.yml'
    arguments: '--debug'
